#include "ir.h"

// original codes
// PANASONIC216AC : off : 400407200000006040040720001C0C01FE00007007000081006047 : 216
/*
unsigned char PanaOff1[] = { 0x40,0x04,0x07,0x20,0x00,0x00,0x00,0x60 };
unsigned char PanaOff2[] = { 0x40,0x04,0x07,0x20,0x00,0x1C,0x0C,0x01,0xFE,0x00,0x00,0x70,0x07,0x00,0x00,0x81,0x00,0x60,0x47 };
unsigned char PanaOn1[] = { 0x40,0x04,0x07,0x20,0x00,0x00,0x00,0x60 };
unsigned char PanaOn2[] = { 0x40,0x04,0x07,0x20,0x00,0x9C,0x4C,0x01,0xFE,0x00,0x00,0x70,0x07,0x00,0x00,0x81,0x00,0x60,0xA7 };
*/

// new codes 13 oct 2015
//0 : PANASONIC216AC : OFF24 : 400407200000006040040720001C0C014E000070070000810060AB : 216
//1 : PANASONIC216AC : ON24 : 400407200000006040040720009C0C014E0000700700008100606B : 216
unsigned char PanaOff1[] = { 0x40, 0x04, 0x07, 0x20, 0x00, 0x00, 0x00, 0x60 };
unsigned char PanaOff2[] = { 0x40, 0x04, 0x07, 0x20, 0x00, 0x1C, 0x0C, 0x01, 0x4E, 0x00, 0x00, 0x70, 0x07, 0x00, 0x00, 0x81, 0x00, 0x60, 0xAB };
unsigned char PanaOn1[] = { 0x40, 0x04, 0x07, 0x20, 0x00, 0x00, 0x00, 0x60 };
unsigned char PanaOn2[] = { 0x40, 0x04, 0x07, 0x20, 0x00, 0x9C, 0x0C, 0x01, 0x4E, 0x00, 0x00, 0x70, 0x07, 0x00, 0x00, 0x81, 0x00, 0x60, 0x6B };

// Carrier codes
// TOSHIBA144AC : off_23c_fan4 : F20D03FC0160C700A6F20D03FC0160C700A6 : 144
unsigned char CarrierOff[] = { 0xF2, 0x0D, 0x03, 0xFC, 0x01, 0x60, 0xC7, 0x00, 0xA6, 0xF2, 0x0D, 0x03, 0xFC, 0x01, 0x60, 0xC7, 0x00, 0xA6 };
unsigned char CarrierOff1[] = { 0xF2, 0x0D, 0x03, 0xFC, 0x01, 0x60, 0xC7, 0x00, 0xA6 };
// TOSHIBA144AC : 23c_fan4     : F20D03FC0160C100A0F20D03FC0160C100A0 : 144
unsigned char CarrierOn[] = { 0xF2, 0x0D, 0x03, 0xFC, 0x01, 0x60, 0xC1, 0x00, 0xA0, 0xF2, 0x0D, 0x03, 0xFC, 0x01, 0x60, 0xC1, 0x00, 0xA0 };


void ac_on() {
#ifdef PANA
  sendHex(PanaOn1, sizeof(PanaOn1) / sizeof(PanaOn1[0]), 38);
  delay(76);
  sendHex(PanaOn2, sizeof(PanaOn2) / sizeof(PanaOn2[0]), 38);
#else
  sendHex(CarrierOn, sizeof(CarrierOn) / sizeof(CarrierOn[0]), 38);
#endif
}

void ac_off() {
#ifdef PANA
  sendHex(PanaOff1, sizeof(PanaOff1) / sizeof(PanaOff1[0]), 38);
  delay(76);
  sendHex(PanaOff2, sizeof(PanaOff2) / sizeof(PanaOff2[0]), 38);
#else
  sendHex(CarrierOff1, sizeof(CarrierOff1) / sizeof(CarrierOff1[0]), 38);
  delay(8);
  sendHex(CarrierOff1, sizeof(CarrierOff1) / sizeof(CarrierOff1[0]), 38);
#endif
}
